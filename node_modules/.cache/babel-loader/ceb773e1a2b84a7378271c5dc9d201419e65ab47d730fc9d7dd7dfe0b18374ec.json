{"ast":null,"code":"var _jsxFileName = \"/Users/samlaxton/Desktop/portfolio/samuel-laxton-portfolio/src/components/Header.js\";\nimport React from \"react\";\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex align-items-center justify-content-between p-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-left\",\n      children: \"Sam Laxton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav d-flex justify-content-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#home\",\n          onClick: () => handlePageChange(\"Home\")\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          ,\n          className: currentPage === \"Home\" ? \"nav-link active\" : \"nav-link\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#about\",\n          onClick: () => handlePageChange(\"About\")\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === \"About\" ? \"nav-link active\" : \"nav-link\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#blog\",\n          onClick: () => handlePageChange(\"Blog\")\n          // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === \"Blog\" ? \"nav-link active\" : \"nav-link\",\n          children: \"Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#contact\",\n          onClick: () => handlePageChange(\"Contact\")\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === \"Contact\" ? \"nav-link active\" : \"nav-link\",\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#projects\",\n          onClick: () => handlePageChange(\"Projects\")\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === \"Projects\" ? \"nav-link active\" : \"nav-link\",\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","_ref","currentPage","handlePageChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","_c","$RefreshReg$"],"sources":["/Users/samlaxton/Desktop/portfolio/samuel-laxton-portfolio/src/components/Header.js"],"sourcesContent":["import React from \"react\";\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\n\nfunction Header({ currentPage, handlePageChange }) {\n  return (\n    <div className=\"d-flex align-items-center justify-content-between p-1\">\n      <h1 className=\"text-left\">Sam Laxton</h1>\n      <ul className=\"nav d-flex justify-content-end\">\n        <li className=\"\">\n          <a\n            href=\"#home\"\n            onClick={() => handlePageChange(\"Home\")}\n            // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n            // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n            className={currentPage === \"Home\" ? \"nav-link active\" : \"nav-link\"}\n          >\n            Home\n          </a>\n        </li>\n        <li className=\"\">\n          <a\n            href=\"#about\"\n            onClick={() => handlePageChange(\"About\")}\n            // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentPage === \"About\" ? \"nav-link active\" : \"nav-link\"}\n          >\n            About\n          </a>\n        </li>\n        <li className=\"\">\n          <a\n            href=\"#blog\"\n            onClick={() => handlePageChange(\"Blog\")}\n            // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentPage === \"Blog\" ? \"nav-link active\" : \"nav-link\"}\n          >\n            Blog\n          </a>\n        </li>\n        <li className=\"\">\n          <a\n            href=\"#contact\"\n            onClick={() => handlePageChange(\"Contact\")}\n            // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={\n              currentPage === \"Contact\" ? \"nav-link active\" : \"nav-link\"\n            }\n          >\n            Contact\n          </a>\n        </li>\n        <li className=\"\">\n          <a\n            href=\"#projects\"\n            onClick={() => handlePageChange(\"Projects\")}\n            // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={\n              currentPage === \"Projects\" ? \"nav-link active\" : \"nav-link\"\n            }\n          >\n            Projects\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}